#-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
#----------------------------------------------------------------------------------------CUSTOM-------------------------------------------------------------------
# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples
#python auto.py
# If not running interactively, don't do anything

#----------------------------tmux---------------------------------------------

tnotify(){
message=$1
token="1103297755:AAGZgk8CBo8SRZ-H8GZpDOvN_Hkc0s4mfVw"
chatid="1346525877"
curl -s -X POST https://api.telegram.org/bot$token/sendMessage -d chat_id=$chatid -d text="$message"
}

tmuxa(){
tmux attach-session -t $1
}

tmuxn(){
tmux new -s $1
}
#----------------------------custom shell----------------------------------------
add(){
echo $1 | tee -a $2
}
HandBrakeCLI(){
HandBrakeCLI -i $1 --encoder-preset slow  -q 23.0 --cfr -o $2
}

title() {
   PROMPT_COMMAND="echo -ne \"\033]0;$1 (on $HOSTNAME)\007\""
   echo "working"
}
export -f title


#----------------------------custom tools--------------------------------------

ty(){
echo '"test"'$2' no'
}

domcs(){
~/tools/my/./domaincs.sh $1 $2
}

sdtocheck(){
cat $1 | grep -v 200  --line-buffered | awk -F' ' '{print "https://"$1; system("")}' | nuclei -nC -silent -t ~/tools/nuclei/nuclei-templates/subdomain-takeover/detect-all-takeovers.yaml | tee sdtolist$2
}

cm(){
~/tools/my/./cm $1 $2
}

vt(){
/home/vinith/bug/tools/./vt.py $1
}


gorp(){
go run /home/vinith/go/src/github.com/DharmaOfCode/gorp/main.go $1 $2 
}

myip(){
wget -q -O - checkip.dyndns.org \ | sed -e 's/.*Current IP Address: //' -e 's/<.*$//'
}

rmhttp(){
cat $1 | sed 's~http[s]*://~~g' | tee $1
} 

censys(){
python /home/vinith/tools/censys-subdomain-finder/censys_subdomain_finder.py $1 | tee -a $2
}

  
sublister(){
python /home/vinith/tools/Sublist3r/sublist3r.py -d $1 | grep $1 | sed -r "s/\x1B\[([0-9]{1,3}(;[0-9]{1,2})?)?[mGK]//g" | tee -a $2

}

findlink(){
~/tools/my/./link.sh $1 $2
}

crtsh(){
curl -s https://crt.sh/?q=%.$1  | sed 's/<\/\?[^>]\+>//g' | grep $1
}

lazys3(){
ruby /home/vinith/tools/lazys3/lazys3.rb $1
}

#github-subdomains(){
#~/tools/./github-subdomains.py -d $1
#}

function certspotter()
{
curl -s https://certspotter.com/api/v0/certs\?domain\=$1 | jq '.[].dns_names[]' | sed 's/\"//g' | sed 's/\*\.//g' | sort -u | grep $1
}

certspotterf(){
pname=$2
sed 's/http:\/\///g' $1 >> filename.txt
sed  's/https:\/\///g' filename.txt > filename1.txt
filename=filename1.txt
lines=`cat $filename`
for line in $lines
do 
	crtsh $line >> $pname
done 
rm filename.txt
rm filename1.txt


}

tesst(){
 curl -s https://crt.sh/?q=%.$1  | sed 's/<\/\?[^>]\+>//g' 
}

aa(){
 echo $1 >> /home/vinith/tools/words
}
#-------------------------------------------------------------------CUSTOM END----------------------------------------------------
#------------------------------------------------------------------------------------------------------------------------------------------

case $- in
    *i*) ;;
      *) return;;
esac
# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=2000

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
#shopt -s globstar

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable ident.ifying the chroot you work in (used in the prompt below)
if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color|*-256color) color_prompt=yes;;
esac

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
#force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
	# We have color support; assume it's compliant with Ecma-48
	# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
	# a case would tend to support setf rather than setaf.)
	color_prompt=yes
    else
	color_prompt=
    fi
fi
#(PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ ')
if [ "$color_prompt" = yes ]; then
    PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\w\[\033[00m\]\$ '
else
    PS1='${debian_chroot:+($debian_chroot)\w\$ '
fi
unset color_prompt force_color_prompt

# If this is an xterm set the title to user@host:dir( PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1")
case "$TERM" in
xterm*|rxvt*)
    PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
    ;;
*)
    ;;
esac

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    #alias dir='dir --color=auto'
    #alias vdir='vdir --color=auto'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# colored GCC warnings and errors
#export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'

# some more ls aliases
alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'

# Add an "alert" alias for long running commands.  Use like so:
#   sleep 10; alert
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'

# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.

if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi

#-------------------------------------------------------------------- Powerline configuration----------------------------------------
if [ -f /usr/share/powerline/bindings/bash/powerline.sh ]; then
  powerline-daemon -q
  POWERLINE_BASH_CONTINUATION=1
  POWERLINE_BASH_SELECT=1
  source /usr/share/powerline/bindings/bash/powerline.sh
fi


#---------------------------------------------------------------------------------------------------
# virtualenv and virtualenvwrapper
export WORKON_HOME=/home/vinith/.virtualenvs
source /usr/local/bin/virtualenvwrapper.sh
#GOROOT=/usr/local/go
#GOPATH=/usr/local/go
#export PATH=$GOPATH/bin:$GOROOT/bin:$PATH
#export PATH=$PATH:/usr/local/go/bin
#export PATH=$PATH:/home/vinith/tools/gorp
#export GOROOT=/usr/local/go
#export GOPATH=$Home/go
#export PATH=$PATH:$GOROOT/bin:$GOPATH/bin:$PATH

#--------------------------------------------------------------------------------------------------------
export PATH=$PATH:~/.local/bin
export WEBPASTE_TOKEN=iloveweb
